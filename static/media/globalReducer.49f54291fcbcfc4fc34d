import { createAsyncThunk, createSlice } from "@reduxjs/toolkit"
import { getCountries } from "../services/locations/service"

const initialState = {
    loader: false,
    countries: []
}

export const getCountriesAPI = createAsyncThunk(
    'global/getCountriesAPI',
    async () => {
        const res = await getCountries()

        return {
            data: res?.data?.map(data => {
                return {
                    label: data?.name,
                    value: data?.id
                }
            }) || []
        }
    }
)

export const gloablSlice = createSlice({
    name: 'global',
    initialState,
    reducers: {
        setLoader: (state, action) => {
            state.loader = action.payload
        }
    },
    extraReducers: (builder) => {
        builder.addCase(getCountriesAPI?.fulfilled, (state, action) => {
            state.countries = action.payload?.data
        })
    }
})

export const { setLoader } = gloablSlice.actions

export default gloablSlice.reducer